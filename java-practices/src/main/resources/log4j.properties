# log4j.rootLogger = [level], appender, appender, ...
# level: ALL < TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
log4j.rootLogger = debug,stdout,D,E

# appender
## org.apache.log4j.ConsoleAppender
## org.apache.log4j.FileAppender
## org.apache.log4j.DailyRollingFileAppender
## org.apache.log4j.RollingFileAppender
## org.apache.log4j.WriterAppender
## ...
# layout
## org.apache.log4j.DateLayout
## org.apache.log4j.HTMLLayout
## org.apache.log4j.PatternLayout
## org.apache.log4j.SimpleLayout
## org.apache.log4j.TTCCLayout
## ...

log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n

log4j.appender.D = org.apache.log4j.FileAppender
log4j.appender.D.File = src/main/resources/log4j/debug.log
log4j.appender.D.Append = true
log4j.appender.D.Threshold = DEBUG
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

log4j.appender.E = org.apache.log4j.FileAppender
log4j.appender.E.File = src/main/resources/log4j/error.log
log4j.appender.E.Append = true
log4j.appender.E.Threshold = ERROR
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

# PatternLayout
# c Category of the logging event. For Example: for the category name x.y.z the pattern %c{2} will output y.z.
# C Fully qualified class name of the caller issuing the logging request. For example, for the class name "org.apache.abc.MyClass", the pattern %C{1} will output "MyClass".
# d Date of the logging event. For example, %d{HH:mm:ss,SSS} or %d{dd MMM yyyy HH:mm:ss,SSS}.
# F File name where the logging request was issued.
# l Location information of the caller which generated the logging event.
# L Line number from where the logging request was issued.
# m Application supplied message associated with the logging event.
# M Method name where the logging request was issued.
# n Give the output of platform-dependent line separator character or characters.
# p Priority of the logging event.
# r Number of milliseconds elapsed from the construction of the layout until the creation of the logging event.
# t Name of the thread that generated the logging event.
# x NDC (nested diagnostic context) associated with the thread that generated the logging event.
# X The X conversion character is followed by the key for the MDC (Mapped Diagnostic Context). For example, X{clientIP} prints the information stored in the MDC against the key clientIP.
# % The literal percent sign. %% will print a % sign.